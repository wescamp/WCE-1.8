#textdomain wce_wesnoth_collaborative_editor_strings

# Wesnoth textdomain setup
[textdomain]
    name="wce_wesnoth_collaborative_editor_strings"
    path="data/add-ons/WCE/translations"
[/textdomain]

#define WCE_MESSAGE_HEADER CAPTION IMAGE
speaker=narrator
caption={CAPTION}
image={IMAGE}
#enddef

#define WCE_MESSAGE_HEADER_GENERAL CAPTION
{WCE_MESSAGE_HEADER {CAPTION} (portraits/elves/sylph.png)}
#enddef

#define WCE_OPTION_CANCEL
[option]
    message=_"cancel"
    [command]
    [/command]
[/option]
#enddef

#define WCE_OPTION_FIRE_EVENT EVENT LABEL
[option]
    message={LABEL}
    [command]
        [fire_event]
            name={EVENT}
        [/fire_event]
    [/command]
[/option]
#enddef

#define WCE_OPTION_BACK EVENT
{WCE_OPTION_FIRE_EVENT {EVENT} (_"back")}
#enddef

#define WCE_OPTION_TEXT_INPUT VAR LABEL
[text_input]
    variable={VAR}
    label={LABEL}
    max_chars=10
[/text_input]
#enddef

#define WCE_ACTION_CHANGE_TERRAIN CODE LAYER HEX_X HEX_Y
    [command]
        [store_locations]
            x={HEX_X}
            y={HEX_Y}
            variable=old_hex
        [/store_locations]
        [terrain]
            x={HEX_X}
            y={HEX_Y}
            terrain={CODE}
            layer={LAYER}
        [/terrain]            
        [store_locations]
            x={HEX_X}
            y={HEX_Y}
            variable=new_hex
        [/store_locations]
# Commented out until I manage to solve how to store/restore these in a good way ;)
#        [label]
#            x={HEX_X}
#            y={HEX_Y}
#            text=$new_hex[0].terrain ($old_hex[0].terrain)
#        [/label]
        {VARIABLE terrain_index $map_changes.length}
        {VARIABLE map_changes[$terrain_index].x {HEX_X}}
        {VARIABLE map_changes[$terrain_index].y {HEX_Y}}
        {VARIABLE map_changes[$terrain_index].code $new_hex[0].terrain}

        [clear_variable]
            name=new_hex, old_hex, terrain_index
        [/clear_variable]
    [/command]
#enddef

#define WCE_OPTION_TERRAIN_ON_HEX NAME CODE LAYER HEX_X HEX_Y
[option]
    message="{NAME}"
    {WCE_ACTION_CHANGE_TERRAIN {CODE} {LAYER} {HEX_X} {HEX_Y}}
[/option]
#enddef

#define WCE_REDEFINE_COORDS
    [set_variable]
        name=hex_x
        value=$x1
    [/set_variable]
    [set_variable]
        name=hex_y
        value=$y1
    [/set_variable]
#enddef

#define WCE_OPTION_VILLAGE_OWNER SIDE HEX_X HEX_Y
[option]
    [show_if]
        [variable]
            name=new_owner[{SIDE}].side_id
            not_equals=$wce_empty
        [/variable]
    [/show_if]
    message="side: $new_owner[{SIDE}].side_id"
    [command]
        [capture_village]
            x={HEX_X}
            y={HEX_Y}
            side=$new_owner[{SIDE}].side_id
        [/capture_village]
    [/command]
[/option]
#enddef

#define WCE_OPTION_ENTER_TERRAIN_ON_LAYER LAYER
[option]
    message={LAYER}
    [command]
        [message]
            {WCE_MESSAGE_HEADER_GENERAL (_"Enter the terrain-code you want to use on {LAYER} layer(s)")}
            {WCE_OPTION_CANCEL}
            {WCE_OPTION_BACK (wce_terrain_menu_insert_code)}
            {WCE_OPTION_TEXT_INPUT (terrain_code) (_"terrain code")}
        [/message]
        {WCE_ACTION_CHANGE_TERRAIN ($terrain_code) ({LAYER}) ($hex_x) ($hex_y)}
    [/command]
[/option]
#enddef

#define WCE_OPTION_STORE_SNAPSHOT NBR
    [option]
        message="_Snapshot #{NBR}: $snapshots[{NBR}].name"
        [command]
            {VARIABLE current_snapshot {NBR}}           
            [message]
                {WCE_MESSAGE_HEADER_GENERAL (_"Name this snapshot")}
                {WCE_OPTION_CANCEL}
#                {WCE_OPTION_BACK (wce_store_menu_main)}
                {WCE_OPTION_TEXT_INPUT (snapshots[$current_snapshot].name) (_"name:")}
            [/message]
        [/command]
    [/option]
#enddef

#define WCE_OPTION_RESTORE_SNAPSHOT NBR
    [option]
        [show_if]
            [variable]
                name=snapshots[{NBR}].units.length
                greater_than_equal_to=1
            [/variable]                            
        [/show_if]
        message=_"Snapshot #{NBR}: $snapshots[{NBR}].name"
        [command]
            {VARIABLE current_snapshot {NBR}}
            {VARIABLE include_terrain yes}
        [/command]
    [/option]
    [option]
        [show_if]
            [variable]
                name=snapshots[{NBR}].units.length
                greater_than_equal_to=1
            [/variable]                            
        [/show_if]
        message=_"Snapshot #{NBR}: $snapshots[{NBR}].name (preserve the changed terrain)"
        [command]
            {VARIABLE current_snapshot {NBR}}
            {VARIABLE include_terrain no}
        [/command]
    [/option]
#enddef

# Create an option to enter terrain-codes instead of using the GUI
[event]
    name=wce_terrain_menu_insert_code
    first_time_only=no

    [message]
        {WCE_MESSAGE_HEADER_GENERAL (_"Which layer do you want to change on $hex_x , $hex_y?")}
        {WCE_OPTION_CANCEL}
        {WCE_OPTION_BACK (wce_terrain_menu_main)}
        {WCE_OPTION_ENTER_TERRAIN_ON_LAYER (_"both")}
        {WCE_OPTION_ENTER_TERRAIN_ON_LAYER (_"base")}
        {WCE_OPTION_ENTER_TERRAIN_ON_LAYER (_"overlay")}
    [/message]
[/event]
# /Create an option to enter terrain-codes instead of using the GUI


# Create a menu system - based on the editor groups - for all terrains
[event]
    name=wce_terrain_menu_main
    first_time_only=no

    [message]
        {WCE_MESSAGE_HEADER_GENERAL (_"Choose the terrain you want to put on $hex_x,$hex_y")}
        {WCE_OPTION_CANCEL}
        {WCE_OPTION_FIRE_EVENT (wce_terrain_menu_insert_code) (_"enter a terrain code")}
        [option]
            message=_"castle and keep terrain"
            [command]
                [message]
                    {WCE_MESSAGE_HEADER (_"Choose the castle or keep terrain you want to put on $hex_x,$hex_y") (terrain/castle/keep-tile.png)}
                    {WCE_OPTION_CANCEL}
                    {WCE_OPTION_BACK wce_terrain_menu_main}                            
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Keep (Castle)") (Kh) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Castle (Castle)") (Ch) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Sunken keep (Castle, Shallow water)") (Khw) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Sunken castle (Castle, Shallow water)") (Chw) both $hex_x $hex_y}
                [/message]
            [/command]
        [/option]
        [option]
            message=_"villages"
            [command]
                [message]
                    {WCE_MESSAGE_HEADER (_"Choose the village terrain you want to put on $hex_x,$hex_y") (terrain/castle/keep-tile.png)}
                    {WCE_OPTION_CANCEL}
                    {WCE_OPTION_BACK wce_terrain_menu_main}                            
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Village (Village)") (Gg^Vc) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Village (Sand, Village)") (Dd^Vda) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Village (Snow, Village)") (Aa^Vca) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Village (Hills, Village)") (Hh^Vc) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Village (Snow hills, Village)") (Ha^Vca) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Village (Mountains, Village)") (Mm^Vc) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Village (Shallow water)") (Ww^Vm) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Village (Swamp, Village)") (Ss^Vhs) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Village (Swamp)") (Ss^Vm) both $hex_x $hex_y}
                [/message]
            [/command]
        [/option]
        [option]
            message=_"flat terrain"
            [command]
                [message]
                    {WCE_MESSAGE_HEADER (_"Choose the flat terrain you want to put on $hex_x,$hex_y") (terrain/flat/grass-r1.png)}
                    {WCE_OPTION_CANCEL}
                    {WCE_OPTION_BACK wce_terrain_menu_main}                            
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Grassland (Flat)") (Gg) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Snow (Frozen)") (Aa) both $hex_x $hex_y}
                [/message]
            [/command]
        [/option]
        [option]
            message=_"water terrain"
            [command]
                [message]
                    {WCE_MESSAGE_HEADER (_"Choose the water terrain you want to put on $hex_x,$hex_y") (terrain/water/coast.png)}
                    {WCE_OPTION_CANCEL}
                    {WCE_OPTION_BACK wce_terrain_menu_main}                            
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Swamp") (Ss) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Deep water") (Wo) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Shallow water") (Ww) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"River ford (flat, Shallow water") (Wwf) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Coastal reef") (Wwr) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Bridge (overlay: Flat") (^Bw\) overlay $hex_x $hex_y}
                [/message]
            [/command]
        [/option]
        [option]
            message=_"forest terrain"
            [command]
                [message]
                    {WCE_MESSAGE_HEADER (_"Choose the forest terrain you want to put on $hex_x,$hex_y") (terrain/forest/pine-tile.png)}
                    {WCE_OPTION_CANCEL}
                    {WCE_OPTION_BACK wce_terrain_menu_main}                            
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Pine forest (Forest)") (^Fp) overlay $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Snowy pine forest (Frozen, Forest)") (^Fpa) overlay $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Forested snow hills (Snow hills, Forest)") (Ha^Fpa) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Forested hills (Hills, Forest)") (Hh^Fp) both $hex_x $hex_y}
                [/message]
            [/command]
        [/option]
        [option]
            message=_"hill and mountain terrain"
            [command]
                [message]
                    {WCE_MESSAGE_HEADER (_"Choose the hill or mountain terrain you want to put on $hex_x,$hex_y") (terrain/mountain-tile.png)}
                    {WCE_OPTION_CANCEL}
                    {WCE_OPTION_BACK wce_terrain_menu_main}                            
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Forested snow hills (Snow hills, Forest)") (Ha^Fpa) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Forested hills (Hills, Forest)") (Hh^Fp) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Snowy hills (Frozen, Hills)") (Ha) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Hills (Hills)") (Hh) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Mountains (Mountains)") (Mm) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Snowy mountains (Frozen, Mountains)") (Ms) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Impassable mountains (Impassable)") (Mm^Xm) both $hex_x $hex_y}
                [/message]
            [/command]
        [/option]
        [option]
            message=_"cave terrain"
            [command]
                [message]
                    {WCE_MESSAGE_HEADER (_"Choose the cave terrain you want to put on $hex_x,$hex_y") (terrain/cave/floor.png)}
                    {WCE_OPTION_CANCEL}
                    {WCE_OPTION_BACK wce_terrain_menu_main}                            
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Bridge (Unwalkable, Cave)") (Qxu^Bs\) overlay $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Chasm (Unwalkable)") (Qxu) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Lava Chasm (Unwalkable)") (Ql) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Lit (Overlay: ())") (^Ii) overlay $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Cave (Cave)") (Uu) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Mushroom Grove (Overlay: Mushroom Grove)") (^Uf) overlay $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Mushroom Grove Lit (Overlay: Mushroom Grove, Lit)") (^Ufi) overlay $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Rockbound Cave (Hills, Cave)") (Uh) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Cave wall (Impassable)") (Xu) both $hex_x $hex_y}
                [/message]
            [/command]
        [/option]
        [option]
            message=_"desert terrain"
            [command]
                [message]
                    {WCE_MESSAGE_HEADER (_"Choose the sand terrain you want to put on $hex_x,$hex_y") (terrain/sand.png)}
                    {WCE_OPTION_CANCEL}
                    {WCE_OPTION_BACK wce_terrain_menu_main}                            
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Sand") (Ds) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Oasis (Sand)") (Dd^Do) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Dunes (Hills, Sand") (Hd) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Desert Mountains (Mountains)") (Md) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Desert impassable mountains (Impassable)") (Md^Xm) both $hex_x $hex_y}
                    {WCE_OPTION_TERRAIN_ON_HEX (_"Rubble (overlay: Hills)") (^Dr) overlay $hex_x $hex_y}
                [/message]
            [/command]
        [/option]
    [/message]
[/event]
# /Create a menu system - based on the editor groups - for all terrains

# Event to show the main store snapshot menu
[event]
    name=wce_store_menu_main
    first_time_only=no
    [message]
        {WCE_MESSAGE_HEADER_GENERAL ("There are 5 slots to store the game state in, which one do you want to use?")}
        {VARIABLE current_snapshot none}
        {WCE_OPTION_CANCEL}
        {WCE_OPTION_STORE_SNAPSHOT 0}
        {WCE_OPTION_STORE_SNAPSHOT 1}
        {WCE_OPTION_STORE_SNAPSHOT 2}
        {WCE_OPTION_STORE_SNAPSHOT 3}
        {WCE_OPTION_STORE_SNAPSHOT 4}
    [/message]
    [if]
        [variable]
            name=current_snapshot
            greater_than=0
        [/variable]
        [then]
            [fire_event]
                name=wce_store_menu_storage
            [/fire_event]
        [/then]
    [/if]
[/event]
# /Event to show the main store snapshot menu

# Event to store specific game states (units, gold, village-ownership, ToD, current turn)
[event]
    name=wce_store_menu_storage
    first_time_only=no

# Store all the units
    [store_unit]
        [filter]
        [/filter]
        variable=snapshots[$current_snapshot].units
    [/store_unit]
# /Store all the units

    {FOREACH recruiting_leaders i}
        {VARIABLE snapshots[$current_snapshot].sides[$i].side_id $recruiting_leaders[$i].side}
# Store the gold for each side
            [store_gold]
                side=$recruiting_leaders[$i].side
                variable=snapshots[$current_snapshot].sides[$i].gold
            [/store_gold]
# /Store the gold for each side
    {NEXT i}

# Store all the villages
    [store_villages]
        variable=snapshots[$current_snapshot].villages
    [/store_villages]
# /Store all the villages

# Store the current ToD
    [store_time_of_day]
        variable=snapshots[$current_snapshot].tod
        turn=$snapshots[$current_snapshot].turn_number
    [/store_time_of_day]
    {VARIABLE snapshots[$current_snapshot].tod $snapshots[$current_snapshot].tod.id}
# /Store the current ToD

# Store all the terrain-changes
    [set_variables]
        name=snapshots[$current_snapshot].terrains
        mode=replace
        to_variable=map_changes
    [/set_variables]
# /Store all the terrain-changes

[/event]
#/ Event to store specific game states (units, gold, village-ownership, ToD, current turn)

# Base event to get it all going
[event]
    name=start
    first_time_only=no

# Define a variable that holds all possible village-terrain codes for use in a location-filter.
{VARIABLE village_terrains ("Dd^Vd*, Aa^V*, Gg^V*, Ha^V*, Hh^V*, Rp^V*, Ms^V*, Mm^V*, Gs^V*, Re^V*, Rr^V*, Uu^V*, Ww^V*, Ss^V*")}
# /Define a variable that holds all possible village-terrain codes for use in a location-filter.

# Get the original map
    [store_locations]
        x=0-100
        y=0-100
        variable=original_map
    [/store_locations]
# /Get the original map

# Get all the canrecruit=yes sides id for later use
    [store_unit]
        [filter]        
            canrecruit=yes
        [/filter]
        variable=recruiting_leaders
    [/store_unit]
# /Get all the canrecruit=yes sides id for later use

# Set ToD-related variables for later use
        {VARIABLE tod[0].id dawn}
        {VARIABLE tod[1].id morning}
        {VARIABLE tod[2].id afternoon}
        {VARIABLE tod[3].id dusk}
        {VARIABLE tod[4].id first_watch}
        {VARIABLE tod[5].id second_watch}
# /Set ToD-related variables for later use

# Store a snapshot at the start of the game
    {VARIABLE map_changes ""}
    {VARIABLE current_snapshot 0}
    {VARIABLE snapshots[$current_snapshot].name (_"start")}
    [fire_event]
        name=wce_store_menu_storage
    [/fire_event]
# /Store a snapshot at the start of the game

# Create a menu system - based on the editor groups - for all terrains and the possibility to enter a terrain-code
    [set_menu_item]
        id=WCE_1_alter_terrain_to_x
        description=_"Change terrain"
        [command]
            {WCE_REDEFINE_COORDS}
            [item]
                x=$hex_x
                y=$hex_y
                image=terrain/darken-linger.png
            [/item]
            [fire_event]
                name=wce_terrain_menu_main
            [/fire_event]
            [removeitem]
                x,y=$hex_x,$hex_y
            [/removeitem]
        [/command]
    [/set_menu_item]
# /Create a menu system - based on the editor groups - for all terrains and the possibility to enter a terrain-code

# Create a menu-item to allow to set ownership of villages
    [set_menu_item]
        id=WCE_2_change_village_ownership
        description=_"Change village owner"
        [filter_location]
            terrain=$village_terrains
        [/filter_location]
        [command]
            {VARIABLE i 0}
            [while]
                [variable]
                    name=i
                    less_than_equal_to=$recruiting_leaders.length
                [/variable]
                [do]
                    [if]
                        [variable]
                            name=i
                            equals=$recruiting_leaders.length
                        [/variable]
                        [then]
                            {VARIABLE new_owner[$i].side_id (_"neutral")}
                        [/then]
                        [else]
                           {VARIABLE new_owner[$i].side_id $recruiting_leaders[$i].side}
                        [/else]
                    [/if]
                    {VARIABLE_OP i add 1}
                [/do]
            [/while]
            [message]
                {WCE_MESSAGE_HEADER_GENERAL (_"Who should own the village at $x1,$y1")}
                {WCE_OPTION_CANCEL}
                {WCE_OPTION_VILLAGE_OWNER 0 $x1 $y1}
                {WCE_OPTION_VILLAGE_OWNER 1 $x1 $y1}
                {WCE_OPTION_VILLAGE_OWNER 2 $x1 $y1}
                {WCE_OPTION_VILLAGE_OWNER 3 $x1 $y1}
                {WCE_OPTION_VILLAGE_OWNER 4 $x1 $y1}
                {WCE_OPTION_VILLAGE_OWNER 5 $x1 $y1}
                {WCE_OPTION_VILLAGE_OWNER 6 $x1 $y1}
                {WCE_OPTION_VILLAGE_OWNER 7 $x1 $y1}
                {WCE_OPTION_VILLAGE_OWNER 8 $x1 $y1}
                {WCE_OPTION_VILLAGE_OWNER 9 $x1 $y1}
            [/message]
        [/command]
    [/set_menu_item]
# /Create a menu-item to allow to set ownership of villages

# 2.1 Create a menu item to access the help
# Commented out, since it doesn't seem to actually work
# it will work in the next dev-release...
#    [set_menu_item]
#        id=WCE_3_open_terrain_help
#        description=_"Terrain help"
#        [filter_location]
#            x=0-100
#            y=0-100
#        [/filter_location]
#        [command]
#            [open_help]
#                topic=..terrains
#            [/open_help]
#        [/command]
#    [/set_menu_item]
# Create a menu item to access the help

# Create a menu item to set units destination hex to the used hex
    [set_menu_item]
        id=WCE_4_move_unit_to
        description=_"Move last selected unit here"
        [filter_location]
            [not]
                [filter]
                [/filter]
            [/not]
        [/filter_location]
        [command]
            [store_unit]
                [filter]
                    x=$move_x
                    y=$move_y
                [/filter]
                variable=the_moving_unit
                kill=yes
            [/store_unit]
            [unstore_unit]
                variable=the_moving_unit
                x=$x1
                y=$y1
            [/unstore_unit]
        [/command]
    [/set_menu_item]
# /Create a menu item to set units destination hex to the used hex

# Create a menu item to store specific game states (units, gold, village-ownership, ToD, current turn, terrain changes)
    [set_menu_item]
        id=WCE_5_store_snapshot
        description=_"Store snapshot"
        [filter_location]
            [filter]
                side=$recruiting_leaders[0].side
                canrecruit=yes
            [/filter]
        [/filter_location]
        [command]
            [fire_event]
                name=wce_store_menu_main
            [/fire_event]
        [/command]
    [/set_menu_item]
# /Create a menu item to store specific game states (units, gold, village-ownership, ToD, current turn, terrain-changes)

# Create a menu item to restore specific game states (units, gold, village-ownership, ToD, current turn, terrain-changes)
    [set_menu_item]
        id=WCE_6_restore_snapshot
        description=_"Restore snapshot"
        [filter_location]
            [filter]
                side=$recruiting_leaders[0].side
                canrecruit=yes
            [/filter]
        [/filter_location]
        [command]
            {VARIABLE current_snapshot none}
            [message]
                {WCE_MESSAGE_HEADER_GENERAL (_"Which snapshot do you want to restore?")}
                {WCE_OPTION_CANCEL}
                {WCE_OPTION_RESTORE_SNAPSHOT 0}
                {WCE_OPTION_RESTORE_SNAPSHOT 1}
                {WCE_OPTION_RESTORE_SNAPSHOT 2}
                {WCE_OPTION_RESTORE_SNAPSHOT 3}
                {WCE_OPTION_RESTORE_SNAPSHOT 4}
            [/message]
            [if]
                [variable]
                    name=current_snapshot
                    not_equal_to=$wce_empty
                [/variable]
                [then]

# Restore the units
                    [kill]
                    [/kill]

                    {FOREACH snapshots[$current_snapshot].units i}
                        [unstore_unit]
                            variable=snapshots[$current_snapshot].units[$i]
                        [/unstore_unit]
                    {NEXT i}
# /Restore the units

# Restore the gold
                    {FOREACH snapshots[$current_snapshot].sides i}
                        {VARIABLE tmp_side $i}
                        {VARIABLE_OP tmp_side add 1}
                        [store_gold]
                            side=$snapshots[$current_snapshot].sides[$i].side_id
                            variable=current_gold
                        [/store_gold]
                        {VARIABLE gold_difference ($snapshots[$current_snapshot].sides[$i].gold)}
                        {VARIABLE_OP gold_difference add -$current_gold}
                        [gold]
                            side=$snapshots[$current_snapshot].sides[$i].side_id
                            amount=$gold_difference
                        [/gold]
                    {NEXT i}
# /Restore the gold

# Restore the villages
                    {FOREACH snapshots[$current_snapshot].villages i}
                        [capture_village]
                            side=$snapshots[$current_snapshot].villages[$i].owner_side
                            x=$snapshots[$current_snapshot].villages[$i].x
                            y=$snapshots[$current_snapshot].villages[$i].y
                        [/capture_village]
                    {NEXT i}
# /Restore the villages

# Restore the current ToD
                    [store_time_of_day]
                        variable=current_tod
                    [/store_time_of_day]
                    {VARIABLE current_tod $current_tod.id}

                    [switch]
                        variable=snapshots[$current_snapshot].tod
                        [case]
                            value=$tod[0].id
                            {VARIABLE snapshot_tod_int 0}
                        [/case]
                        [case]
                            value=$tod[1].id
                            {VARIABLE snapshot_tod_int 1}
                        [/case]
                        [case]
                            value=$tod[2].id
                            {VARIABLE snapshot_tod_int 2}
                        [/case]
                        [case]
                            value=$tod[3].id
                            {VARIABLE snapshot_tod_int 3}
                        [/case]
                        [case]
                            value=$tod[4].id
                            {VARIABLE snapshot_tod_int 4}
                        [/case]
                        [case]
                            value=$tod[5].id
                            {VARIABLE snapshot_tod_int 5}
                        [/case]
                    [/switch]
                    [switch]
                        variable=current_tod
                        [case]
                            value=$tod[0].id
                            {VARIABLE current_tod_int 0}
                        [/case]
                        [case]
                            value=$tod[1].id
                            {VARIABLE current_tod_int 1}
                        [/case]
                        [case]
                            value=$tod[2].id
                            {VARIABLE current_tod_int 2}
                        [/case]
                        [case]
                            value=$tod[3].id
                            {VARIABLE current_tod_int 3}
                        [/case]
                        [case]
                            value=$tod[4].id
                            {VARIABLE current_tod_int 4}
                        [/case]
                        [case]
                            value=$tod[5].id
                            {VARIABLE current_tod_int 5}
                        [/case]
                    [/switch]


                    {VARIABLE tod_turns 6}
                    {VARIABLE_OP tod_turns add $snapshot_tod_int}
                    {VARIABLE_OP tod_turns add -$current_tod_int}
                    {VARIABLE_OP tod_turns modulo 6}              
                    {VARIABLE_OP tod_turns add $turn_number}

                    [modify_turns]
                        current=$tod_turns
                    [/modify_turns]
                    [redraw][/redraw]
# /Restore the current ToD

# Restore the terrains
                    [if]
                        [variable]
                            name=include_terrain
                            equals=yes
                        [/variable]
                        [then]
    # First restore the original map
                            {FOREACH original_map i}
                                [terrain]
                                    x=$original_map[$i].x
                                    y=$original_map[$i].y
                                    terrain=$original_map[$i].terrain
                                [/terrain]
                            {NEXT i}

    # Then restore the changes for this particular snapshot
                            {FOREACH snapshots[$current_snapshot].terrains i}
                                [terrain]
                                    x=$snapshots[$current_snapshot].terrains[$i].x
                                    y=$snapshots[$current_snapshot].terrains[$i].y
                                    terrain=$snapshots[$current_snapshot].terrains[$i].code
                                [/terrain]
                            {NEXT i}
                        [/then]
                    [/if]
# /Restore the terrains

    # Keep track of the actual map_changes up until now
                    [set_variables]
                        name=map_changes
                        mode=replace
                        to_variable=snapshots[$current_snapshot].terrains
                    [/set_variables]

                    [clear_variable]
                        name=current_tod_int, current_tod, current_snapshot, tod_turns, include_terrain
                    [/clear_variable]

                [/then]
            [/if]
        [/command]
    [/set_menu_item]
# /Create a menu item to restore specific game states (units, gold, village-ownership, ToD, current turn, terrain-changes)

[/event]
# /Base event to get it all going

# Event to track what unit to move if any
[event]
    name=select
    first_time_only=no
    {VARIABLE move_x $x1}
    {VARIABLE move_y $y1}
[/event]
# /Event to track what unit to move if any


#undef WCE_MESSAGE_HEADER_GENERAL
#undef WCE_OPTION_CANCEL
#undef WCE_OPTION_FIRE_EVENT
#undef WCE_OPTION_BACK
#undef WCE_OPTION_TEXT_INPUT
#undef WCE_ACTION_CHANGE_TERRAIN
#undef WCE_OPTION_TERRAIN_ON_HEX
#undef WCE_REDEFINE_COORDS
#undef WCE_OPTION_VILLAGE_OWNER
#undef WCE_OPTION_ENTER_TERRAIN_ON_LAYER
#undef WCE_OPTION_STORE_SNAPSHOT
#undef WCE_OPTION_RESTORE_SNAPSHOT

